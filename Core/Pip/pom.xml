<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>UsageControlSystem</groupId>
		<artifactId>Core</artifactId>
		<version>1.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>Pip</artifactId>

	<dependencies>
		<dependency>
			<groupId>UsageControlSystem</groupId>
			<artifactId>CommunicationBase</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>UsageControlSystem</groupId>
			<artifactId>ThriftStubs</artifactId>
			<version>1.0</version>
		</dependency>
		
		<!-- * * DO NOT ADD EXTERNAL DEPENDENCIES HERE, BUT IN THE PARENT PROJECT. 
			* -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>pipdb</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>

				<executions>
					<execution>
						<!-- Clean up nologging -->
						<id>clean-nologging</id>
						<phase>clean</phase>
					</execution>

					<execution>
						<!-- Change the source code such that all logging methods will not be executed.
							This is done _before_ compilation phase. -->
						<id>do-nologging</id>
						<phase>process-sources</phase>
					</execution>

					<!-- Undo changes to the source code for disabling logging.
						This is done _after_ compilation phase and _before_ test-compilation phase.
						THUS: Logging is _NOT_ disabled for test classes. -->
					<execution>
						<id>undo-nologging</id>
						<phase>process-classes</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.google.code.maven-replacer-plugin
										</groupId>
										<artifactId>
											replacer
										</artifactId>
										<versionRange>
											[1.5.3,)
										</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
